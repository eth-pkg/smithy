name: teku
version: 24.1.0
valueFormat: equals
rules:
  - flag: --beacon-liveness-tracking-enabled
    configPath: 
    description: |
      Track validator liveness and enable requests to the liveness rest api
  - flag: --builder-bid-compare-factor
    configPath: 
    enabled:
      configPath: consensus.builder.enabled
      transform: flagEnabled
    description: |
      Set the compare factor applied to the builder bid value when comparing it with locally produced
      payload. Factor is expressed in percentage
  - flag: --builder-endpoint
    configPath: consensus.builder.url
    enabled:
      configPath: consensus.builder.enabled
      transform: flagEnabled
    description: |
      URL for an external Builder node (optional)
  - flag: --builder-set-user-agent-header
    configPath: consensus.builder.userAgent
    enabled:
      configPath: consensus.builder.enabled
      transform: flagEnabled
    description: |
      Set User-Agent header to teku/v<version> when making a builder bid request to help builders
      identify clients and versions
  - flag: --checkpoint-sync-url
    configPath: consensus.checkpointSync.url
    enabled:
      configPath: consensus.checkpointSync.enabled
      transform: flagEnabled
    description: |
      The Checkpointz server that will be used to bootstrap this node
  - flag: --config-file
    configPath: 
    description: |
      Path/filename of the yaml config file
  - flag: --data-beacon-path
    configPath: 
    description: |
      Path to beacon node data
  - flag: --data-path
    configPath: consensus.dataDir
    description: |
      Path to the base directory for storage
  - flag: --data-storage-mode
    configPath: 
    description: |
      Sets the strategy for handling historical chain data
  - flag: --data-validator-path
    configPath: validator.dataDir
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Path to validator client data
  - flag: --deposit-snapshot-enabled
    configPath: 
    description: |
      Use bundled snapshot for most networks and persist deposit tree snapshot
  - flag: --doppelganger-detection-enabled
    configPath: validator.doppelgangerProtection
    enabled: 
      configPath: validator.isExternal
      transform: negate
    description: |
      Enable validators doppelganger detection
  - flag: --ee-endpoint
    configPath: common.engine.api.urls
    transform: repeatFlag
    description: |
      URL for Execution Engine node
  - flag: --ee-jwt-claim-id
    configPath: common.engine.jwt.id
    description: |
      A unique identifier for the consensus layer client. This identifier will be added to the JWT
      claims as an 'id' claim
  - flag: --ee-jwt-secret-file
    configPath: common.engine.jwt.file
    description: |
      Location of the file specifying the hex-encoded 256 bit secret key to be used for
      verifying/generating jwt tokens
  - flag: --eth1-endpoints
    configPath: 
    description: |
      URLs for Eth1 nodes
  - flag: --exchange-capabilities-monitoring-enabled
    configPath: 
    description: |
      Enables querying EL periodically for the Engine API methods it supports
  - flag: --exit-when-no-validator-keys-enabled
    configPath: validator.enabled
    transform: flagEnabled
    description: |
      Enable terminating the process if no validator keys are found during startup
  - flag: --genesis-state
    configPath: consensus.genesisSync.state
    enabled:
      configPath: consensus.genesisSync.enabled
      transform: flagEnabled
    description: |
      The genesis state. This value should be a file or URL pointing to an SSZ-encoded finalized
      checkpoint state
  - flag: --genesis-state
    configPath: consensus.genesisSync.url
    enabled:
      configPath: consensus.genesisSync.enabled
      transform: flagEnabled
    description: |
      The genesis state. This value should be a file or URL pointing to an SSZ-encoded finalized
      checkpoint state   
  - flag: --genesis-state
    configPath: common.network.custom.genesisSSZFile
    enabled:
      configPath: common.network.name
      transform: customNetworkEnabled
    description: |
      The genesis state. This value should be a file or URL pointing to an SSZ-encoded finalized
      checkpoint state         
  - flag: --ignore-weak-subjectivity-period-enabled
    configPath: consensus.checkpointSync.ignoreWeakSubjectivityPeriod
    transform: isFlag
    enabled:
      configPath: consensus.checkpointSync.enabled
      transform: flagEnabled
    description: |
      Allows syncing outside of the weak subjectivity period
  - flag: --initial-state
    configPath: 
    description: |
      The initial state. This value should be a file or URL pointing to an SSZ-encoded finalized
      checkpoint state
  - flag: --log-color-enabled
    configPath: consensus.logging.console.color
    transform: flagEnabled
    enabled: 
      - configPath: consensus.logging.console.enabled
        transform: flagEnabled
      - configPath: consensus.logging.enabled
        transform: flagEnabled
    description: |
      Whether Status and Event log messages include a console color display code
  - flag: --log-destination
    configPath: 
    enabled: 
      - configPath: consensus.logging.console.enabled
        transform: flagEnabled
      - configPath: consensus.logging.enabled
        transform: flagEnabled
    description: |
      Whether a logger is added for the console, the log file, or both
  - flag: --log-file
    configPath: consensus.logging.file.fullPath
    enabled: 
      - configPath: consensus.logging.file.enabled
        transform: flagEnabled
      - configPath: consensus.logging.enabled
        transform: flagEnabled
    description: |
      Path containing the location (relative or absolute) and the log filename
  - flag: --log-file-name-pattern
    configPath: 
    enabled: 
      - configPath: consensus.logging.file.enabled
        transform: flagEnabled
      - configPath: consensus.logging.enabled
        transform: flagEnabled
    description: |
      Pattern for the filename to apply to rolled over log files
  - flag: --log-include-events-enabled
    configPath: 
    enabled: 
      configPath: consensus.logging.enabled
      transform: flagEnabled
    description: |
      Whether frequent update events are logged (e.g. every slot and epoch event)
  - flag: --log-include-validator-duties-enabled
    configPath: 
    enabled: 
      - configPath: consensus.logging.enabled
        transform: flagEnabled
    description: |
      Whether events are logged when validators perform duties
  - flag: --logging
    configPath: consensus.logging.console.level
    enabled:
      - configPath: consensus.logging.console.enabled
        transform: flagEnabled
      - configPath: consensus.logging.enabled
        transform: flagEnabled
    description: |
      Logging verbosity levels: OFF, FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL
  - flag: --metrics-block-production-performance-tracking-enabled
    configPath: 
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Whether block production timing metrics are tracked and reported
  - flag: --metrics-block-timing-tracking-enabled
    configPath: 
    enabled: 
      configPath: 
      transform: flagEnabled
    description: |
      Whether block timing metrics are tracked and reported
  - flag: --metrics-categories
    configPath: 
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Metric categories to enable
  - flag: --metrics-enabled
    configPath: consensus.metrics.enabled
    transform: flagEnabled
    description: |
      Enables metrics collection via Prometheus
  - flag: --metrics-host-allowlist
    configPath: consensus.metrics.allowlist
    transform: allowlist
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Comma-separated list of hostnames to allow, or * to allow any host
  - flag: --metrics-interface
    configPath: consensus.metrics.address
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Metrics network interface to expose metrics for Prometheus
  - flag: --metrics-port
    configPath: consensus.metrics.port
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Metrics port to expose metrics for Prometheus
  - flag: --metrics-publish-endpoint
    configPath: 
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Publish metrics for node monitoring to an external service
  - flag: --metrics-publish-interval
    configPath: 
    enabled: 
      configPath: consensus.metrics.enabled
      transform: flagEnabled
    description: |
      Interval between metric publications to the external service (measured in seconds)
  - flag: --network
    configPath: common.network.name
    enabled:
      configPath: common.network.name
      transform: standardNetworkEnabled
    description: |
      Represents which network to use
  - flag: --network
    configPath: common.network.custom.paramsFile
    enabled:
      configPath: common.network.name
      transform: customNetworkEnabled
    description: |
      Represents which network to use    
  - flag: --p2p-advertised-ip
    configPath: 
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      P2P advertised IP address(es). You can define up to 2 addresses, with one being IPv4 and the
      other IPv6
  - flag: --p2p-advertised-port
    configPath: consensus.p2p.port
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      P2P advertised port. The default is the port specified in --p2p-port
  - flag: --p2p-advertised-port-ipv6
    configPath: consensus.p2p.port6
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      P2P advertised IPv6 port. This port is only used when advertising both IPv4 and IPv6
      addresses
  - flag: --p2p-advertised-udp-port
    configPath: consensus.p2p.udpPort
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Advertised UDP port to external peers. The default is the port specified in --p2p-advertised-port
  - flag: --p2p-advertised-udp-port-ipv6
    configPath: consensus.p2p.udpPort
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Advertised IPv6 UDP port to external peers. This port is only used when advertising both IPv4 and
      IPv6 addresses
  - flag: --p2p-discovery-bootnodes
    configPath: consensus.p2p.bootnodes
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      List of ENRs of the bootnodes
  - flag: --p2p-discovery-enabled
    configPath: consensus.p2p.enabled
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Enables discv5 discovery
  - flag: --p2p-discovery-site-local-addresses-enabled
    configPath: consensus.p2p.localPeerDiscovery
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Whether discovery accepts messages and peer records with site local (RFC1918) addresses
  - flag: --p2p-enabled
    configPath: consensus.p2p.enabled
    transform: flagEnabled
    description: |
      Enables P2P
  - flag: --p2p-interface
    configPath: consensus.p2p.listenAddress
    enabled:
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      The network interface(s) on which the node listens for P2P communication
  - flag: --p2p-nat-method
    configPath: consensus.p2p.upnp
    transform: toUpnp
    enabled:
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Specify the NAT circumvention method to be used, possible values are UPNP, NONE
  - flag: --p2p-peer-lower-bound
    configPath: 
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Lower bound on the target number of peers
  - flag: --p2p-peer-upper-bound
    configPath: consensus.p2p.maxPeers
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Upper bound on the target number of peers
  - flag: --p2p-port
    configPath: consensus.p2p.port
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      P2P port
  - flag: --p2p-port-ipv6
    configPath: consensus.p2p.port6
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      P2P IPv6 port. This port is only used when listening over both IPv4 and IPv6
  - flag: --p2p-private-key-file
    configPath: consensus.p2p.privKeyFile
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      This node's private key file in LibP2P format
  - flag: --p2p-static-peers
    configPath: consensus.p2p.staticPeers
    transform: allowlist
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Specifies a list of 'static' peers with which to establish and maintain connections
  - flag: --p2p-subscribe-all-subnets-enabled
    configPath: consensus.p2p.subscribeAllSubnets
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      Enable subscribing to all subnets
  - flag: --p2p-udp-port
    configPath: consensus.p2p.discoveryPort
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      UDP port used for discovery. The default is the port specified in --p2p-port
  - flag: --p2p-udp-port-ipv6
    configPath: consensus.p2p.discoveryPort6
    enabled: 
      configPath: consensus.p2p.enabled
      transform: flagEnabled
    description: |
      IPv6 UDP port used for discovery. This port is only used when listening over both IPv4 and
      IPv6
  - flag: --reconstruct-historic-states
    configPath: 
    description: |
      Enable reconstruction of historic states
  - flag: --rest-api-cors-origins
    configPath: consensus.http.allowlist
    transform: allowlist
    enabled: 
      configPath: consensus.http.enabled
      transform: flagEnabled
    description: |
      Comma separated list of origins to allow, or * to allow any origin
  - flag: --rest-api-docs-enabled
    configPath: consensus.http.enabled
    enabled: 
      configPath: consensus.http.enabled
      transform: flagEnabled
    description: |
      Enable swagger-docs and swagger-ui endpoints
  - flag: --rest-api-enabled
    configPath: consensus.http.enabled
    transform: flagEnabled
    description: |
      Enables Beacon Rest API
  - flag: --rest-api-host-allowlist
    configPath: consensus.http.allowlist
    transform: allowlist
    enabled: 
      configPath: consensus.http.enabled
      transform: flagEnabled
    description: |
      Comma-separated list of hostnames to allow, or * to allow any host
  - flag: --rest-api-interface
    configPath: consensus.http.address
    enabled: 
      configPath: consensus.http.enabled
      transform: flagEnabled
    description: |
      Interface of Beacon Rest API
  - flag: --rest-api-port
    configPath: consensus.http.port
    enabled: 
      configPath: consensus.http.enabled
      transform: flagEnabled
    description: |
      Port number of Beacon Rest API
  - flag: --shut-down-when-validator-slashed-enabled
    configPath: 
    transform: flagEnabled
    description: |
      If enabled and an owned validator key is detected as slashed, the node will terminate
  - flag: --validator-api-bearer-file
    configPath: 
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Use the specified file as the bearer token for the validator Rest API
  - flag: --validator-api-cors-origins
    configPath: validator.http.allowlist
    enabled: 
      configPath: validator.http.enabled
      transform: flagEnabled
    description: |
      Comma separated list of origins to allow, or * to allow any origin
  - flag: --validator-api-docs-enabled
    configPath: 
    enabled: 
      configPath: validator.http.enabled
      transform: flagEnabled
    description: |
      Enable swagger-docs and swagger-ui endpoints
  - flag: --validator-api-enabled
    configPath: 
    enabled: 
      configPath: validator.http.enabled
      transform: flagEnabled
    description: |
      Enables Validator Rest API
  - flag: --validator-api-host-allowlist
    configPath: validator.http.allowlist
    enabled: 
      configPath: validator.http.enabled
      transform: flagEnabled
    description: |
      Comma-separated list of hostnames to allow, or * to allow any host
  - flag: --validator-api-interface
    configPath: validator.http.address
    enabled: 
      configPath: validator.http.enabled
      transform: flagEnabled
    description: |
      Interface of Validator Rest API
  - flag: --validator-api-keystore-file
    configPath: validator.externalSigner.keystore
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Keystore used for ssl for the validator api
  - flag: --validator-api-keystore-password-file
    configPath: validator.externalSigner.keystorePasswordFile
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Password used to decrypt the keystore for the validator api
  - flag: --validator-api-port
    configPath: validator.metrics.port
    enabled: 
      configPath: validator.http.enabled
      transform: flagEnabled
    description: |
      Port number of Rest API
  - flag: --validator-is-local-slashing-protection-synchronized-enabled
    configPath: 
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Restrict local signing to a single operation at a time
  - flag: --validator-keys
    configPath: validator.keysDir
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      <KEY_DIR>:<PASS_DIR> will find <KEY_DIR>/**.json, and expect to find <PASS_DIR>/**.txt
  - flag: --validators-builder-registration-default-enabled
    configPath: validator.builderEnabled
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Enable validators registration to builder infrastructure
  - flag: --validators-builder-registration-default-gas-limit
    configPath: validator.suggestedGasLimit
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Change the default gas limit used for the validators registration
  - flag: --validators-early-attestations-enabled
    configPath: 
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Generate attestations as soon as a block is known, rather than delaying until the attestation
      is due
  - flag: --validators-external-signer-keystore
    configPath: validator.externalSigner.keystore
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Keystore (PKCS12/JKS) to use for TLS mutual authentication with external signer
  - flag: --validators-external-signer-keystore-password-file
    configPath: validator.externalSigner.keystorePasswordFile
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Password file to decrypt keystore (PKCS12/JKS) that will be used for TLS mutual
      authentication with external signer
  - flag: --validators-external-signer-public-keys
    configPath: validator.externalSigner.publicKeys
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      The list of external signer public keys, or a URL to load the keys from
  - flag: --validators-external-signer-slashing-protection-enabled
    configPath: 
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Enable internal slashing protection for external signers
  - flag: --validators-external-signer-timeout
    configPath: validator.externalSigner.timeout
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Timeout (in milliseconds) for the external signing service
  - flag: --validators-external-signer-truststore
    configPath: validator.externalSigner.truststore
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Keystore (PKCS12/JKS) to trust external signer's self-signed certificate
  - flag: --validators-external-signer-truststore-password-file
    configPath: validator.externalSigner.truststorePasswordFile
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      Password file to decrypt keystore (PKCS12/JKS) that will be used to trust external
      signer's self-signed certificate
  - flag: --validators-external-signer-url
    configPath: validator.externalSigner.url
    enabled: 
      configPath: validator.externalSigner.enabled
      transform: flagEnabled
    description: |
      URL for the external signing service
  - flag: --validators-graffiti
    description: |
      Graffiti value to include during block creation. Value gets converted to bytes and
      padded to Bytes32
  - flag: --validators-graffiti-client-append-format
    description: |
      Appends CL and EL clients information with a space to user's graffiti when producing a
      block on the Beacon Node
  - flag: --validators-graffiti-file
    description: |
      File to load graffiti value to include during block creation. Value gets converted to
      bytes and padded to Bytes32
  - flag: --validators-keystore-locking-enabled
    configPath: 
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Enable locking validator keystore files
  - flag: --validators-performance-tracking-mode
    configPath: 
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Set strategy for handling performance tracking
  - flag: --validators-proposer-blinded-blocks-enabled
    configPath: validator.proposerConfig.blindedBlocksEnabled
    enabled: 
      configPath: validator.proposerConfig.enabled
      transform: flagEnabled
    description: |
      Use blinded blocks when in block production duties
  - flag: --validators-proposer-config
    configPath: validator.proposerConfig.file
    enabled: 
      configPath: validator.proposerConfig.enabled
      transform: flagEnabled
    description: |
      Remote URL or local file path to load proposer configuration from
  - flag: --validators-proposer-config-refresh-enabled
    configPath: validator.proposerConfig.refreshEnabled
    enabled: 
      configPath: validator.proposerConfig.enabled
      transform: flagEnabled
    description: |
      Enable the proposer configuration reload on every proposer preparation (once per
      epoch)
  - flag: --validators-proposer-default-fee-recipient
    configPath: validator.suggestFeeRecipientAddress
    enabled: 
      configPath: validator.enabled
      transform: flagEnabled
    description: |
      Default fee recipient sent to the execution engine, which could use it as fee
      recipient when producing a new execution block
  - flag: --ws-checkpoint
    configPath: consensus.checkpointSync.wss
    enabled: 
      configPath: consensus.checkpointSync.enabled
      transform: flagEnabled
    description: |
      A recent checkpoint within the weak subjectivity period. Should be a string
      containing <BLOCK_ROOT>:<EPOCH_NUMBER> or a URL containing the field
      ws_checkpoint with the same information
