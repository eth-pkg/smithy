Usage:

besu [OPTIONS] [COMMAND]

Description:

This command runs the Besu Ethereum client full node.

Options:
      --auto-log-bloom-caching-enabled=<autoLogBloomCachingEnabled>
                             Enable automatic log bloom caching (default: true)
      --bonsai-historical-block-limit,
        --bonsai-maximum-back-layers-to-load=<LONG>
                             Limit of historical layers that can be loaded with
                               BONSAI (default: 512). When using
                               --bonsai-limit-trie-logs-enabled it will also be
                               used as the number of layers of trie logs to
                               retain.
      --bonsai-limit-trie-logs-enabled, --Xbonsai-limit-trie-logs-enabled,
        --Xbonsai-trie-log-pruning-enabled
                             Limit the number of trie logs that are retained.
                               (default: true)
      --bonsai-trie-logs-pruning-window-size,
        --Xbonsai-trie-logs-pruning-window-size=<trieLogPruningWindowSize>
                             The max number of blocks to load and prune trie
                               logs for at startup. (default: 5000)
      --cache-last-blocks=<numberOfBlocksToCache>
                             Specifies the number of last blocks to cache
                               (default: 0)
      --cache-precompiles    Specifies whether to cache precompile results
                               (default: false)
      --color-enabled        Force color output to be enabled/disabled
                               (default: colorized only if printing to console)
      --config-file=<FILE>   TOML config file (default: none)
      --data-path=<PATH>     The path to Besu data directory (default:
                               /usr/lib/eth-node-besu/besu)
      --data-storage-format=<dataStorageFormat>
                             Format to store trie data in.  Either FOREST or
                               BONSAI (default: BONSAI).
      --ethstats=<[ws://|wss://]nodename:secret@host:[port]>
                             Reporting URL of a ethstats server. Scheme and
                               port can be omitted.
      --ethstats-cacert-file=<FILE>
                             Specifies the path to the root CA (Certificate
                               Authority) certificate file that has signed
                               ethstats server certificate. This option is
                               optional.
      --ethstats-contact=<ethstatsContact>
                             Contact address to send to ethstats server
      --genesis-file=<FILE>  Genesis file for your custom network. Setting this
                               option requires --network-id to be set. (Cannot
                               be used with --network)
      --genesis-state-hash-cache-enabled
                             Use genesis state hash from data on startup if
                               specified (default: false)
  -h, --help                 Show this help message and exit.
      --host-allowlist=<hostname>[,<hostname>...]... or * or all
                             Comma separated list of hostnames to allow for RPC
                               access, or * to accept any host (default:
                               localhost,127.0.0.1)
      --identity=<String>    Identification for this node in the Client ID
      --key-value-storage=<keyValueStorageName>
                             Identity for the key-value storage to be used.
      --kzg-trusted-setup=<FILE>
                             Path to file containing the KZG trusted setup,
                               mandatory for custom networks that support data
                               blobs, optional for overriding named networks
                               default.
  -l, --logging=<LOG VERBOSITY LEVEL>
                             Logging verbosity levels: OFF, ERROR, WARN, INFO,
                               DEBUG, TRACE, ALL
      --nat-method=<natMethod>
                             Specify the NAT circumvention method to be used,
                               possible values are UPNP, UPNPP2PONLY, DOCKER,
                               AUTO, NONE. NONE disables NAT functionality.
                               (default: AUTO)
      --network=<NETWORK>    Synchronize against the indicated network,
                               possible values are MAINNET, SEPOLIA, HOLESKY,
                               HOODI, EPHEMERY, LUKSO, DEV, FUTURE_EIPS,
                               EXPERIMENTAL_EIPS, CLASSIC, MORDOR. (default:
                               MAINNET)
      --network-id=<BIG INTEGER>
                             P2P network identifier. (default: the selected
                               network chain ID or custom genesis chain ID)
      --node-private-key-file=<PATH>
                             The node's private key file (default: a file named
                               "key" in the Besu data directory)
      --pid-path=<PATH>      Path to PID file (optional)
      --plugin-continue-on-error=<continueOnPluginError>
                             Allow Besu startup even if any plugins fail to
                               initialize correctly (default: false)
      --plugins=<plugins>[,<plugins>...]
                             Comma-separated list of plugin names to load
      --print-paths-and-exit[=<username>]
                             Print the configured paths and exit without
                               starting the node.
      --profile=<PROFILE>    Overwrite default settings. Possible values are
                               dev, enterprise, minimalist_staker, private,
                               staker. (default: none)
      --receipt-compaction-enabled
                             Enables compact storing of receipts (default: true)
      --reorg-logging-threshold=<reorgLoggingThreshold>
                             How deep a chain reorganization must be in order
                               for it to be logged (default: 6)
      --required-block, --required-blocks[=BLOCK=HASH[,BLOCK=HASH...]...]
                             Block number and hash peers are required to have.
      --revert-reason-enabled
                             Enable passing the revert reason back through
                               TransactionReceipts (default: false)
      --security-module=<NAME>
                             Identity for the Security Module to be used.
      --static-nodes-file=<FILE>
                             Specifies the static node file containing the
                               static nodes for this node to connect to
      --sync-min-peers, --fast-sync-min-peers=<INTEGER>
                             Minimum number of peers required before starting
                               sync. Has effect only on non-PoS networks.
                               (default: 5)
      --sync-mode=<MODE>     Synchronization mode, possible values are FULL,
                               FAST, SNAP, CHECKPOINT (default: SNAP if a
                               --network is supplied and privacy isn't enabled.
                               FULL otherwise.)
  -V, --version              Print version information and exit.
      --version-compatibility-protection
                             Perform compatibility checks between the version
                               of Besu being started and the version of Besu
                               that last started with this data directory.
                               (default: null)
Tx Pool Layered Implementation Options
      --tx-pool-layer-max-capacity=<LONG>
                             Max amount of memory space, in bytes, that any
                               layer within the transaction pool could occupy
                               (default: 25000000)
      --tx-pool-max-future-by-sender=<INTEGER>
                             Max number of future pending transactions allowed
                               for a single sender (default: 200)
      --tx-pool-max-prioritized=<INTEGER>
                             Max number of pending transactions that are
                               prioritized and thus kept sorted (default: 4000)
      --tx-pool-max-prioritized-by-type=MAP<TYPE,INTEGER>[,MAP<TYPE,INTEGER>...]
                             Max number of pending transactions, of a specific
                               type, that are prioritized and thus kept sorted
                               (default: {BLOB=9})
      --tx-pool-min-score=<Byte>
                             Remove a pending transaction from the txpool if
                               its score is lower than this value.Accepts
                               values between -128 and 127 (default: -128)
Tx Pool Sequenced Implementation Options
      --tx-pool-limit-by-account-percentage=<DOUBLE>
                             Maximum portion of the transaction pool which a
                               single account may occupy with future
                               transactions (default: 0.001)
      --tx-pool-max-size=<INTEGER>
                             Maximum number of pending transactions that will
                               be kept in the transaction pool (default: 4096)
      --tx-pool-retention-hours=<INTEGER>
                             Maximum retention period of pending transactions
                               in hours (default: 13)
Tx Pool Common Options
      --rpc-tx-feecap=<txFeeCap>
                             Maximum transaction fees (in Wei) accepted for
                               transaction submitted through RPC (default:
                               0x00000000000000000000000000000000000000000000000
                               00de0b6b3a7640000)
      --strict-tx-replay-protection-enabled[=<Boolean>]
                             Require transactions submitted via JSON-RPC to use
                               replay protection in accordance with EIP-155
                               (default: false)
      --tx-pool[=<Enum>]     The Transaction Pool implementation to use
                               (default: LAYERED)
      --tx-pool-blob-price-bump=<Percentage>
                             Blob price bump percentage to replace an already
                               existing transaction blob tx (default: 100)
      --tx-pool-disable-locals, --tx-pool-no-local-priority[=<Boolean>]
                             Set to true if senders of transactions sent via
                               RPC should not have priority (default: false)
      --tx-pool-enable-save-restore[=<Boolean>]
                             Set to true to enable saving the txpool content to
                               file on shutdown and reloading it on startup
                               (default: false)
      --tx-pool-min-gas-price=<Wei>
                             Transactions with gas price (in Wei) lower than
                               this minimum will not be accepted into the txpool
                               (not to be confused with min-gas-price, that is
                               applied on block creation) (default:
                               0x00000000000000000000000000000000000000000000000
                               000000000000003e8)
      --tx-pool-price-bump=<Percentage>
                             Price bump percentage to replace an already
                               existing transaction  (default: 10)
      --tx-pool-priority-senders=Comma separated list of addresses[,Comma
        separated list of addresses...]...
                             Pending transactions sent exclusively by these
                               addresses, from any source, are prioritized and
                               only evicted after all others. If not specified,
                               then only the senders submitting transactions
                               via RPC have priority (default: [])
      --tx-pool-save-file=<STRING>
                             If saving the txpool content is enabled, define a
                               custom path for the save file (default: txpool.
                               dump in the data-dir)
Block Builder Options
      --block-txs-selection-max-time=<nonPoaBlockTxsSelectionMaxTime>
                             Deprecated. PoW consensus is deprecated. See
                               CHANGELOG for alternative options. Specifies the
                               maximum time, in milliseconds, that could be
                               spent selecting transactions to be included in
                               the block. Not compatible with PoA networks, see
                               poa-block-txs-selection-max-time. (default:
                               +5000)
      --min-block-occupancy-ratio=<minBlockOccupancyRatio>
                             Minimum occupancy ratio for a mined block
                               (default: 0.8)
      --min-gas-price=<minTransactionGasPrice>
                             Minimum price (in Wei) offered by a transaction
                               for it to be included in a mined block (default:
                               0x00000000000000000000000000000000000000000000000
                               000000000000003e8)
      --min-priority-fee=<minPriorityFeePerGas>
                             Minimum priority fee per gas (in Wei) offered by a
                               transaction for it to be included in a block
                               (default:
                               0x00000000000000000000000000000000000000000000000
                               00000000000000000)
      --miner-coinbase=<coinbase>
                             Account to which mining rewards are paid. You must
                               specify a valid coinbase if mining is enabled
                               using --miner-enabled option
      --miner-enabled        Deprecated. PoW consensus is deprecated. See
                               CHANGELOG for alternative options. Set if node
                               will perform mining (default: false)
      --miner-extra-data=<extraData>
                             A hex string representing the (32) bytes to be
                               included in the extra data field of a mined
                               block (default: 0x626573752032352e342e31)
      --miner-stratum-enabled
                             Deprecated. PoW consensus is deprecated. See
                               CHANGELOG for alternative options. Set if node
                               will perform Stratum mining (default: false).
                               Compatible with Proof of Work (PoW) only.
                               Requires the network option (--network) to be
                               set to CLASSIC.
      --miner-stratum-host=<stratumNetworkInterface>
                             Deprecated. PoW consensus is deprecated. See
                               CHANGELOG for alternative options. Host for
                               Stratum network mining service (default: 0.0.0.0)
      --miner-stratum-port=<stratumPort>
                             Deprecated. PoW consensus is deprecated. See
                               CHANGELOG for alternative options. Stratum port
                               binding (default: 8008)
      --poa-block-txs-selection-max-time=<poaBlockTxsSelectionMaxTime>
                             Specifies the maximum time that could be spent
                               selecting transactions to be included in the
                               block, as a percentage of the fixed block time
                               of the PoA network. To be only used on PoA
                               networks, for other networks see
                               block-txs-selection-max-time. (default: +75)
      --target-gas-limit=<targetGasLimit>
                             Sets target gas limit per block. If set, each
                               block's gas limit will approach this setting
                               over time.
P2P Discovery Options
      --banned-node-id, --banned-node-ids=<NODEID>[,<NODEID>...]...
                             A list of node IDs to ban from the P2P network.
      --bootnodes[=<enode://id@host:port>[,<enode://id@host:port>...]...]
                             Comma separated enode URLs for P2P discovery
                               bootstrap. Default is a predefined list.
      --discovery-dns-url=<discoveryDnsUrl>
                             Specifies the URL to use for DNS discovery
      --discovery-enabled=<peerDiscoveryEnabled>
                             Enable P2P discovery (default: true)
      --max-peers, --p2p-peer-upper-bound=<INTEGER>
                             Maximum P2P connections that can be established
                               (default: 25)
      --net-restrict=<allowedSubnets>[,<allowedSubnets>...]...
                             Comma-separated list of allowed IP subnets (e.g.,
                               '192.168.1.0/24,10.0.0.0/8').
      --p2p-enabled=<p2pEnabled>
                             Enable P2P functionality (default: true)
      --p2p-host=<HOST>      IP address this node advertises to its peers
                               (default: 127.0.0.1)
      --p2p-interface=<HOST> The network interface address on which this node
                               listens for P2P communication (default: 0.0.0.0)
      --p2p-port=<PORT>      Port on which to listen for P2P communication
                               (default: 30303)
      --poa-discovery-retry-bootnodes=<poaDiscoveryRetryBootnodes>
                             Always use of bootnodes for discovery in PoA
                               networks. Disabling this reverts  to the same
                               behaviour as non-PoA networks, where neighbours
                               are only discovered from bootnodes on first
                               startup.(default: true)
      --random-peer-priority-enabled
                             Allow for incoming connections to be prioritized
                               randomly. This will prevent (typically small,
                               stable) networks from forming impenetrable peer
                               cliques. (default: false)
      --remote-connections-limit-enabled
                             Whether to limit the number of P2P connections
                               initiated remotely. (default: true)
      --remote-connections-max-percentage=<DOUBLE>
                             The maximum percentage of P2P connections that can
                               be initiated remotely. Must be between 0 and 100
                               inclusive. (default: 60)
GraphQL Options
      --graphql-http-cors-origins=<graphQLHttpCorsAllowedOrigins>
                             Comma separated origin domain URLs for CORS
                               validation (default: none)
      --graphql-http-enabled Set to start the GraphQL HTTP service (default:
                               false)
      --graphql-http-host=<HOST>
                             Host for GraphQL HTTP to listen on (default: null)
      --graphql-http-port=<PORT>
                             Port for GraphQL HTTP to listen on (default: 8547)
      --graphql-mtls-enabled Enable mTLS for GraphQL HTTP service
      --graphql-tls-enabled  Enable TLS for GraphQL HTTP service
      --graphql-tls-keystore-file=<graphqlTlsKeystoreFile>
                             Path to the TLS keystore file for GraphQL HTTP
                               service
      --graphql-tls-keystore-password-file=<graphqlTlsKeystorePasswordFile>
                             Path to the file containing the password for the
                               TLS keystore
      --graphql-tls-truststore-file=<graphqlTlsTruststoreFile>
                             Path to the TLS truststore file for GraphQL HTTP
                               service
      --graphql-tls-truststore-password-file=<graphqlTlsTruststorePasswordFile>
                             Path to the file containing the password for the
                               TLS truststore
Engine JSON-RPC Options
      --engine-host-allowlist=<hostname>[,<hostname>...]... or * or all
                             Comma separated list of hostnames to allow for
                               ENGINE API access (applies to both HTTP and
                               websockets), or * to accept any host (default:
                               localhost,127.0.0.1)
      --engine-jwt-disabled  Disable authentication for Engine APIs (default:
                               false)
      --engine-jwt-secret=<FILE>
                             Path to file containing shared secret key for JWT
                               signature verification
      --engine-rpc-enabled   enable the engine api, even in the absence of
                               merge-specific configurations.
      --engine-rpc-port, --engine-rpc-http-port=<PORT>
                             Port to provide consensus client APIS on (default:
                               8551)
JSON-RPC HTTP Options
      --json-pretty-print-enabled
                             Enable JSON pretty print format (default: false)
      --rpc-http-api, --rpc-http-apis=<api name>[ {0,1}, {0,1}<api name>...]...
                             Comma separated list of APIs to enable on JSON-RPC
                               HTTP service (default: [ETH, NET, WEB3])
      --rpc-http-api-method-no-auth, --rpc-http-api-methods-no-auth=<api name>[
        {0,1}, {0,1}<api name>...]...
                             Comma separated list of API methods to exclude
                               from RPC authentication services, RPC HTTP
                               authentication must be enabled
      --rpc-http-authentication-credentials-file=<FILE>
                             Storage file for JSON-RPC HTTP authentication
                               credentials (default: null)
      --rpc-http-authentication-enabled
                             Require authentication for the JSON-RPC HTTP
                               service (default: false)
      --rpc-http-authentication-jwt-algorithm=<rpcHttpAuthenticationAlgorithm>
                             Encryption algorithm used for HTTP JWT public key.
                               Possible values are RS256, RS384, RS512, ES256,
                               ES384, HS256, ES512 (default: RS256)
      --rpc-http-authentication-jwt-public-key-file=<FILE>
                             JWT public key file for JSON-RPC HTTP
                               authentication
      --rpc-http-cors-origins=<rpcHttpCorsAllowedOrigins>
                             Comma separated origin domain URLs for CORS
                               validation (default: none)
      --rpc-http-enabled     Set to start the JSON-RPC HTTP service (default:
                               false)
      --rpc-http-host=<HOST> Host for JSON-RPC HTTP to listen on (default:
                               127.0.0.1)
      --rpc-http-max-active-connections=<rpcHttpMaxConnections>
                             Maximum number of HTTP connections allowed for
                               JSON-RPC (default: 80). Once this limit is
                               reached, incoming connections will be rejected.
      --rpc-http-max-batch-size=<INTEGER>
                             Specifies the maximum number of requests in a
                               single RPC batch request via RPC. -1 specifies
                               no limit  (default: 1024)
      --rpc-http-max-request-content-length=<LONG>
                             Specifies the maximum request content length.
                               (default: 5242880)
      --rpc-http-port=<PORT> Port for JSON-RPC HTTP to listen on (default: 8545)
      --rpc-http-tls-ca-clients-enabled
                             Enable to accept clients certificate signed by a
                               valid CA for client authentication (default:
                               false)
      --rpc-http-tls-cipher-suite,
        --rpc-http-tls-cipher-suites=<rpcHttpTlsCipherSuites>[,
        <rpcHttpTlsCipherSuites>...]...
                             Comma separated list of TLS cipher suites to
                               support
      --rpc-http-tls-client-auth-enabled
                             Enable TLS client authentication for the JSON-RPC
                               HTTP service (default: false)
      --rpc-http-tls-enabled Enable TLS for the JSON-RPC HTTP service (default:
                               false)
      --rpc-http-tls-keystore-file=<FILE>
                             Keystore (PKCS#12) containing key/certificate for
                               the JSON-RPC HTTP service. Required if TLS is
                               enabled.
      --rpc-http-tls-keystore-password-file=<FILE>
                             File containing password to unlock keystore for
                               the JSON-RPC HTTP service. Required if TLS is
                               enabled.
      --rpc-http-tls-known-clients-file=<FILE>
                             Path to file containing clients certificate common
                               name and fingerprint for client authentication
      --rpc-http-tls-protocol, --rpc-http-tls-protocols=<rpcHttpTlsProtocols>[,
        <rpcHttpTlsProtocols>...]...
                             Comma separated list of TLS protocols to support
                               (default: [TLSv1.3, TLSv1.2])
      --rpc-http-tls-truststore-file=<FILE>
                             Path to the truststore file for the JSON-RPC HTTP
                               service.
      --rpc-http-tls-truststore-password-file=<FILE>
                             Path to the file containing the password for the
                               truststore.
JSON-RPC Websocket Options
      --rpc-ws-api, --rpc-ws-apis=<api name>[ {0,1}, {0,1}<api name>...]...
                             Comma separated list of APIs to enable on JSON-RPC
                               WebSocket service (default: [ETH, NET, WEB3])
      --rpc-ws-api-method-no-auth, --rpc-ws-api-methods-no-auth=<api name>[
        {0,1}, {0,1}<api name>...]...
                             Comma separated list of RPC methods to exclude
                               from RPC authentication services, RPC WebSocket
                               authentication must be enabled
      --rpc-ws-authentication-credentials-file=<FILE>
                             Storage file for JSON-RPC WebSocket authentication
                               credentials (default: null)
      --rpc-ws-authentication-enabled
                             Require authentication for the JSON-RPC WebSocket
                               service (default: false)
      --rpc-ws-authentication-jwt-algorithm=<rpcWebsocketsAuthenticationAlgorith
        m>
                             Encryption algorithm used for Websockets JWT
                               public key. Possible values are RS256, RS384,
                               RS512, ES256, ES384, HS256, ES512 (default:
                               RS256)
      --rpc-ws-authentication-jwt-public-key-file=<FILE>
                             JWT public key file for JSON-RPC WebSocket
                               authentication
      --rpc-ws-enabled       Set to start the JSON-RPC WebSocket service
                               (default: false)
      --rpc-ws-host=<HOST>   Host for JSON-RPC WebSocket service to listen on
                               (default: null)
      --rpc-ws-max-active-connections=<rpcWsMaxConnections>
                             Maximum number of WebSocket connections allowed
                               for JSON-RPC (default: 80). Once this limit is
                               reached, incoming connections will be rejected.
      --rpc-ws-max-frame-size=<rpcWsMaxFrameSize>
                             Maximum size in bytes for JSON-RPC WebSocket
                               frames (default: 1048576). If this limit is
                               exceeded, the websocket will be disconnected.
      --rpc-ws-port=<PORT>   Port for JSON-RPC WebSocket service to listen on
                               (default: 8546)
      --rpc-ws-ssl-cert-file=<FILE>
                             Path to the PEM cert file for the WebSocket RPC
                               service
      --rpc-ws-ssl-client-auth-enabled
                             Enable client authentication for the WebSocket RPC
                               service
      --rpc-ws-ssl-enabled   Enable SSL/TLS for the WebSocket RPC service
      --rpc-ws-ssl-key-file=<FILE>
                             Path to the PEM key file for the WebSocket RPC
                               service
      --rpc-ws-ssl-keystore-file=<FILE>
                             Path to the keystore file for the WebSocket RPC
                               service
      --rpc-ws-ssl-keystore-password=<PASSWORD>
                             Password for the WebSocket RPC keystore file
      --rpc-ws-ssl-keystore-password-file=<FILE>
                             File containing the password for WebSocket
                               keystore.
      --rpc-ws-ssl-keystore-type=<TYPE>
                             Type of the WebSocket RPC keystore (JKS, PKCS12,
                               PEM)
      --rpc-ws-ssl-trustcert-file=<FILE>
                             Path to the PEM trustcert file for the WebSocket
                               RPC service
      --rpc-ws-ssl-truststore-file=<FILE>
                             Path to the truststore file for the WebSocket RPC
                               service
      --rpc-ws-ssl-truststore-password=<PASSWORD>
                             Password for the WebSocket RPC truststore file
      --rpc-ws-ssl-truststore-password-file=<FILE>
                             File containing the password for WebSocket
                               truststore.
      --rpc-ws-ssl-truststore-type=<TYPE>
                             Type of the truststore (JKS, PKCS12, PEM)
In-Process RPC Options
(Deprecated) Privacy Options
      --privacy-enable-database-migration
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Enable
                               private database metadata migration (default:
                               false)
      --privacy-enabled      Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Enable
                               private transactions (default: false)
      --privacy-flexible-groups-enabled
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Enable
                               flexible privacy groups (default: false)
      --privacy-marker-transaction-signing-key-file=<privateMarkerTransactionSig
        ningKeyPath>
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. The name
                               of a file containing the private key used to
                               sign privacy marker transactions. If unset, each
                               will be signed with a random key.
      --privacy-multi-tenancy-enabled
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Enable
                               multi-tenant private transactions (default:
                               false)
      --privacy-nonce-always-increments
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Enable
                               private nonce incrementation even if the
                               transaction didn't succeeded (default: false)
      --privacy-public-key-file=<privacyPublicKeyFile>
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. The
                               enclave's public key file
      --privacy-tls-enabled  Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Enable
                               TLS for connecting to privacy enclave (default:
                               false)
      --privacy-tls-keystore-file=<FILE>
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Path to a
                               PKCS#12 formatted keystore; used to enable TLS
                               on inbound connections.
      --privacy-tls-keystore-password-file=<FILE>
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Path to a
                               file containing the password used to decrypt the
                               keystore.
      --privacy-tls-known-enclave-file=<FILE>
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. Path to a
                               file containing the fingerprints of the
                               authorized privacy enclave.
      --privacy-url=<privacyUrl>
                             Deprecated. Tessera-based privacy is deprecated.
                               See CHANGELOG for alternative options. The URL
                               on which the enclave is running
Metrics Options
      --metrics-category, --metrics-categories=<category name>[,<category
        name>...]...
                             Comma separated list of categories to track
                               metrics for (default: [jvm, blockchain,
                               ethereum, executors, process, synchronizer,
                               permissioning, stratum, network, peers, rpc,
                               transaction_pool, block_processing, pruner])
      --metrics-enabled      Set to start the metrics exporter (default: false)
      --metrics-host=<HOST>  Host for the metrics exporter to listen on
                               (default: 127.0.0.1)
      --metrics-port=<PORT>  Port for the metrics exporter to listen on
                               (default: 9545)
      --metrics-protocol=<metricsProtocol>
                             Metrics protocol, one of PROMETHEUS, OPENTELEMETRY
                               or NONE. (default: PROMETHEUS)
      --metrics-push-enabled Enable the metrics push gateway integration
                               (default: false)
      --metrics-push-host=<HOST>
                             Host of the Prometheus Push Gateway for push mode
                               (default: 127.0.0.1)
      --metrics-push-interval=<INTEGER>
                             Interval in seconds to push metrics when in push
                               mode (default: 15)
      --metrics-push-port=<PORT>
                             Port of the Prometheus Push Gateway for push mode
                               (default: 9001)
      --metrics-push-prometheus-job=<metricsPrometheusJob>
                             Job name to use when in push mode (default:
                               besu-client)
Permissions Options
      --permissions-accounts-config-file=<accountPermissionsConfigFile>
                             Account permissioning config TOML file (default: a
                               file named "permissions_config.toml" in the Besu
                               data folder)
      --permissions-accounts-config-file-enabled
                             Enable account level permissions (default: false)
      --permissions-accounts-contract-address=<permissionsAccountsContractAddres
        s>
                             Deprecated. Onchain permissioning is deprecated.
                               See CHANGELOG for alternative options. Address
                               of the account permissioning smart contract
      --permissions-accounts-contract-enabled
                             Deprecated. Onchain permissioning is deprecated.
                               See CHANGELOG for alternative options. Enable
                               account level permissions via smart contract
                               (default: false)
      --permissions-nodes-config-file=<nodePermissionsConfigFile>
                             Node permissioning config TOML file (default: a
                               file named "permissions_config.toml" in the Besu
                               data folder)
      --permissions-nodes-config-file-enabled
                             Enable node level permissions (default: false)
      --permissions-nodes-contract-address=<permissionsNodesContractAddress>
                             Deprecated. Onchain permissioning is deprecated.
                               See CHANGELOG for alternative options. Address
                               of the node permissioning smart contract
      --permissions-nodes-contract-enabled
                             Deprecated. Onchain permissioning is deprecated.
                               See CHANGELOG for alternative options. Enable
                               node level permissions via smart contract
                               (default: false)
      --permissions-nodes-contract-version=<permissionsNodesContractVersion>
                             Deprecated. Onchain permissioning is deprecated.
                               See CHANGELOG for alternative options. Version
                               of the EEA Node Permissioning interface
                               (default: 1)
API Configuration Options
      --api-gas-price-blocks=<apiGasPriceBlocks>
                             Number of blocks to consider for eth_gasPrice
                               (default: 100)
      --api-gas-price-max=<apiGasPriceMax>
                             Maximum gas price for eth_gasPrice (default:
                               500000000000)
      --api-gas-price-percentile=<apiGasPricePercentile>
                             Percentile value to measure for eth_gasPrice
                               (default: 50.0)
      --rpc-gas-cap=<rpcGasCap>
                             Specifies the gasLimit cap for transaction
                               simulation RPC methods. Must be >=0. 0 specifies
                               no limit  (default: 50000000)
      --rpc-max-logs-range=<rpcMaxLogsRange>
                             Specifies the maximum number of blocks to retrieve
                               logs from via RPC. Must be >=0. 0 specifies no
                               limit  (default: 5000)
      --rpc-max-trace-filter-range=<maxTraceFilterRange>
                             Specifies the maximum number of blocks for the
                               trace_filter method. Must be >=0. 0 specifies no
                               limit  (default: 1000)
Commands:
  blocks           This command provides blocks related actions.
  txparse          Parse input transactions and return the sender, or an error.
  public-key       This command provides node public key related actions.
  password         This command provides password related actions.
  rlp              This command provides RLP data related actions.
  operator         Operator related actions such as generating configuration
                     and caches.
  validate-config  This command provides basic Besu config validation (syntax
                     only).
  storage          This command provides storage related actions.

Besu is licensed under the Apache License 2.0


To get started quickly, just choose a network to sync and a profile to run with
suggested defaults:

for Mainnet --network=mainnet --profile=[minimalist_staker|staker]

More info and other profiles at https://besu.hyperledger.org
