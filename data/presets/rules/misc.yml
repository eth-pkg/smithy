$id: misc.yml
allOf:
  - if:
      type: object
      properties:
        validator:
          type: object
          properties:
            enabled:
              type: boolean
              const: true
      required: ["validator"]
    then:
      type: object
      required:
        - validator
      properties:
        validator:
          type: object
          required:
            - client
            - beaconRpcProvider
            - feeRecipientAddress
          properties:
            beaconRpcProvider:
              type: string
            feeRecipientAddress:
              type: string
            client:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
          errorMessage:
            required: "Validator configuration is required when staking is enabled"

  # =============================================
  # Besu Security Configuration Rules
  # =============================================
  # Enforces strict security rules for Besu's allowlist configuration:
  # - Prevents mixing wildcards (*) or 'all' with specific hosts
  # - This prevents accidental exposure by ensuring the allowlist is either:
  #   * Completely open (just '*' or 'all')
  #   * Completely closed (specific hosts only)
  # - Prevents ambiguous configurations that could lead to security vulnerabilities
  - if:
      type: object
      properties:
        execution:
          type: object
          properties:
            client:
              type: object
              properties:
                name:
                  const: "besu"
          required: ["client"]
      required: ["execution"]
    then:
      type: object
      properties:
        common:
          type: object
          properties:
            engine:
              type: object
              properties:
                allowlist:
                  not:
                    anyOf:
                      - type: string
                        pattern: ".*\\*.*,.*"
                      - type: string
                        pattern: ".*,.*\\*.*"
                      - type: string
                        pattern: ".*all.*,.*"
                      - type: string
                        pattern: ".*,.*all.*"
                  errorMessage:
                    not: "When using Besu, allowlist cannot contain '*' or 'all' combined with other values"

  # =============================================
  # Client Compatibility Rules
  # =============================================
  # Enforces known client compatibility constraints:
  # - Specifically prevents the Lighthouse consensus client with Prysm validator combination
  # - This combination is known to have compatibility issues
  # - All other client combinations are allowed
  - if:
      type: object
      properties:
        consensus:
          type: object
          properties:
            client:
              type: object
              properties:
                name:
                  const: lighthouse
              required: ["name"]    
          required: ["client"]        
        validator:
          type: object
          properties:
            client:
              type: object
              properties:
                name:
                  const: prysm 
              required: ["name"]
          required: ["client"]           
      required: ["consensus", "validator"]                  
    then:
      errorMessage: |
        The combination of Lighthouse consensus client with Prysm validator is not currently supported.
        All other client combinations are supported.
        If you need this specific combination, please check with the clients team.

  # =============================================
  # IPC Communication OS Restriction Rule
  # =============================================
  # Ensures that IPC communication is only supported on Linux:
  # - If engine.communication is set to 'ipc', operatingSystem must be 'linux'
  # - For Besu, IPC support (--Xrpc-ipc-enabled) is still early access and should be used with caution
  - if:
      type: object
      properties:
        common:
          type: object
          properties:
            engine:
              type: object
              properties:
                communication:
                  const: ipc
    then:
      type: object
      properties:
        common:
          type: object
          properties:
            operatingSystem:
              const: linux
              errorMessage: "IPC communication is only supported on Linux. Please set operatingSystem to 'linux' or use a different communication method."

  # Warning for Besu IPC early access
  - if:
      type: object
      properties:
        common:
          type: object
          properties:
            engine:
              type: object
              properties:
                communication:
                  const: ipc
              required: ["communication"]
          required: ["engine"]        
        execution:   
          type: object
          properties:       
            client:
              type: object
              properties:
                name:
                  const: besu
              required: ["name"]
          required: ["client"]
      required: ["common", "execution"]
    then:
      errorMessage: "Warning: Besu support for IPC (--Xrpc-ipc-enabled) is still early access. Use with caution."

  - if:
      type: object
      properties:
        execution:
          type: object
          properties:
            client:
              type: object
              properties:
                name:
                  const: erigon
              required: ["name"]
          required: ["client"]        
        common:
          type: object
          properties:
            engine:
              type: object
              properties:
                communication:
                  const: ipc
              required: ["communication"]
          required: ["engine"]        
      required: ["execution", "common"]          
    then:
      errorMessage: "Erigon does not support IPC communication. Please use a different communication method."

