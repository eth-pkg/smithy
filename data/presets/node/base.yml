$id: base.yml
type: object
required:
  - common
properties:
  common:
    $ref: ./node/common.yml
  execution:
    type: object
    required: [client]
    properties:
      client:
        type: object
        required: [name]
        properties:
          name:
            type: string
            enum:
              - besu
              - erigon
              - geth
              - nethermind
              - reth
            description: "The execution client implementation to use"
            errorMessage:
              enum: "Execution client must be one of: besu, erigon, geth, nethermind, reth"
          version:
            type: string
            default: ""
            description: "The version of the execution client to use"
            errorMessage:
              pattern: "Version must be a valid semver string"
      isExternal:
        type: boolean
        default: true
        description: "Is the consensus client external to the node, in different process"
      http:
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable HTTP JSON-RPC API"
          api:
            type: array
            minItems: 1
            default: ["eth", "net", "web3"]
            description: "List of JSON-RPC API namespaces to enable"
            items:
              type: string
          address:
            type: string
            default: "localhost"
          allowlist:
            type: array
            default: ["*"]
            description: "List of allowed CORS origins for HTTP API"
            items:
              type: string
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 8545
            description: "Port number for HTTP JSON-RPC API"
            errorMessage:
              minimum: "HTTP port must be >= 1024"
              maximum: "HTTP port must be <= 65535"
          tls:
            type: object
            properties:
              enabled:
                type: boolean
                default: false
                description: "Enable TLS for HTTP JSON-RPC API"
              cert:
                type: string
                default: ""
                description: "Path to the TLS certificate file"
              key:
                type: string
                default: ""
      metrics:
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable metrics collection and reporting"
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 6060
            description: "Port number for metrics server"
            errorMessage:
              minimum: "Metrics port must be >= 1024"
              maximum: "Metrics port must be <= 65535"
      p2p:
        type: object
        properties:
          maxPeers:
            type: number
            minimum: 1
            maximum: 1000
            default: 50
            description: "Maximum number of P2P peers to connect to"
            errorMessage:
              minimum: "Max peers must be at least 1"
              maximum: "Max peers should not exceed 1000"
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 30303
            description: "Port number for P2P networking"
            errorMessage:
              minimum: "P2P port must be >= 1024"
              maximum: "P2P port must be <= 65535"
          bootnodes:
            type: array
            items:
              type: string
            default: []
            description: "List of bootnode enode URLs for initial peer discovery"
          enrAddress:
            type: string
            default: ""
            description: "ENR (Ethereum Node Record) address to advertise"
          udpPort:
            type: number
            minimum: 1024
            maximum: 65535
            default: 30303
            description: "Port number for P2P networking"
            errorMessage:
              minimum: "P2P port must be >= 1024"
          relayNode:
            type: string
            default: ""
            description: "Relay node address for P2P networking"
          allowlist:
            type: array
            items:
              type: string
            default: ["*"]
            description: "List of allowed CORS origins for P2P networking"
          denylist:
            type: array
            items:
              type: string
            default: []
            description: "List of denied CORS origins for P2P networking"
            
            
      ws:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable WebSocket JSON-RPC API"
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 8546
            description: "Port number for WebSocket JSON-RPC API"
            errorMessage:
              minimum: "WebSocket port must be >= 1024"
              maximum: "WebSocket port must be <= 65535"
      dataDir:
        type: string
        default: "{common.dataDir}/{execution.client.name}"
        description: "Base directory for execution client data. Interpolated from common.dataDir and execution.client.name."

  consensus:
    type: object
    required: [client]
    properties:
      client:
        type: object
        required: [name]
        properties:
          name:
            type: string
            enum:
              - lighthouse
              - lodestar
              - nimbus-eth2
              - prysm
              - teku
            description: "The consensus client implementation to use"
            errorMessage:
              enum: "Consensus client must be one of: lighthouse, lodestar, nimbus-eth2, prysm, teku"
          version:
            type: string
            default: ""
            description: "The version of the consensus client to use"
            errorMessage:
              pattern: "Version must be a valid semver string"
      http:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable HTTP JSON-RPC API"
          api:
            type: array
            minItems: 1
            default: ["eth", "net", "web3"]
            description: "List of JSON-RPC API namespaces to enable"
            items:
              type: string
          address:
            type: string
            default: "localhost"
          allowlist:
            type: array
            default: ["*"]
            description: "List of allowed CORS origins for HTTP API"
            items:
              type: string
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 8545
            description: "Port number for HTTP JSON-RPC API"
            errorMessage:
              minimum: "HTTP port must be >= 1024"
              maximum: "HTTP port must be <= 65535"

      metrics:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable metrics collection and reporting"
          host:
            type: string
            default: "127.0.0.1"
            description: "IP address to bind the metrics server to"
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 8008
            description: "Port number for metrics server of the consensus client"
            errorMessage:
              minimum: "Metrics port must be >= 1024"
              maximum: "Metrics port must be <= 65535"
      p2p:
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable P2P networking of the consensus client"
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 9000
            description: "Port number for P2P networking of the consensus client"
            errorMessage:
              minimum: "P2P port must be >= 1024"
          port6:
            type: number
            minimum: 1024
            maximum: 65535
            default: 9000
            description: "IPv6 P2P port number (0 to disable IPv6)"    
          udpPort:
            type: number
            minimum: 1024
            maximum: 65535
            default: 9000
            description: "Port number for P2P networking of the consensus client"
            errorMessage:
              minimum: "P2P port must be >= 1024"
          bootnodes:
              type: array
              items:
                type: string
              default: []
              description: "List of bootnode enode URLs for initial peer discovery"
          enrAddress:
              type: string
              default: ""
              description: "ENR (Ethereum Node Record) address to advertise"    
      ws: 
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable WebSocket JSON-RPC API"
          port:
            type: number
            minimum: 1024
            maximum: 65535
            default: 8546
            description: "Port number for WebSocket JSON-RPC API"
            errorMessage:
              minimum: "WebSocket port must be >= 1024"

      checkpoint:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable checkpoint sync"
          url:
            type: string
            default: ""
            description: "URL of a trusted beacon node for checkpoint sync"
          block:
            type: string
            default: ""
            description: "Block root hash to use for checkpoint sync"
          state:
            type: string
            default: ""
            description: "State root hash to use for checkpoint sync"
          weakSubjectivity:
            type: string
            default: ""
            description: "Weak subjectivity checkpoint to use for checkpoint sync"
      graffiti:
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable graffiti on proposed blocks"
          message:
            type: string
            default: ""
            description: "Custom graffiti message to include in proposed blocks"
          file:
            type: string
            default: ""
            description: "Path to file containing graffiti messages"
      log: 
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable logging of the consensus client"
          file:
            type: string
            default: ""
            description: "Path to store consensus client logs"
          format:
            type: string
            enum:
              - auto
              - json
              - plain
    
      testnetDir:
        type: string
        default: ""
        description: "Path to testnet configuration directory"
      validatorMonitorFile:
        type: string
        default: ""
        description: "Path to file for validator monitoring data"
      builder:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable block builder API for MEV"
          url:
            type: string
            default: ""
            description: "URL for the block builder API"
      dataDir:
        type: string
        default: "{common.dataDir}/{consensus.client.name}"
        description: "Base directory for consensus client data. Interpolated from common.dataDir and consensus.client.name."

  validator:
    type: object
    properties:
      enabled:
        type: boolean
        default: false
        description: "Enable validator functionality"
      isExternal:
        type: boolean
        default: true
        description: "Is the validator external to the node, in different process"
      client:
        type: object
        required: [name]
        properties:
          name:
            type: string
            enum:
              - lighthouse
              - lodestar
              - nimbus-eth2
              - prysm
              - teku
              - ""
            description: "The validator client implementation to use (required when staking is enabled)"
            errorMessage:
              enum: "Validator client must be one of: lighthouse, lodestar, nimbus-eth2, prysm, teku"
            default: ""
          version:
            type: string
            default: ""
            description: "The version of the validator client to use"
            errorMessage:
              pattern: "Version must be a valid semver string"
      dataDir:
        type: string
        default: "{common.dataDir}/{validator.client.name}-validator"
        description: "Base directory for validator data. Interpolated from common.dataDir and validator.client.name."
      beaconRpcProvider:
        type: string
        default: "localhost:5052"
        description: "Beacon node RPC endpoint (host:port)"
        errorMessage:
          pattern: "Beacon RPC provider must be a valid host:port"
      numValidators:
        type: number
        minimum: 1
        default: 1
        description: "Number of validators to run"
        errorMessage:
          minimum: "Number of validators must be at least 1"
      feeRecipientAddress:
        type: string
        default: "0x0000000000000000000000000000000000000000"
        description: "Ethereum address to receive transaction fees"
        errorMessage:
          pattern: "Fee recipient address must be a valid Ethereum address"
      metrics:
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable validator metrics collection"  
          host:
            type: string
            default: "127.0.0.1"
            description: "IP address to bind the metrics server to"
          port:
            type: number
            minimum: 1024
      graffiti: 
        type: object
        properties:
          enabled:
            type: boolean
            default: true
            description: "Enable graffiti on proposed blocks"
          message:
            type: string
            default: ""
            description: "Custom graffiti message to include in proposed blocks"
          file:
            type: string
            default: ""
            description: "Path to file containing graffiti messages"
      suggestedGasLimit:
        type: number
        default: 30000000
        description: "Suggested gas limit for proposed blocks"
      doppelgangerProtection:
        type: boolean
        default: true
        description: "Enable protection against duplicate validator instances"
      builderEnabled:
        type: boolean
        default: false
        description: "Enable block builder API"
      externalSigner:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable external signer"
          url:
            type: string
            default: ""
            description: "URL for external signer service"
          keystore:
            type: string
            default: ""
            description: "Path to external signer keystore"
          keystorePasswordFile:
            type: string
            default: ""
            description: "Path to file containing external signer keystore password"
          publicKeys:
            type: array
            items:
              type: string
            default: []
            description: "List of public keys for external signer"
          timeout:
            type: number
            default: 5000
            description: "Timeout in milliseconds for external signer requests"
          truststore:
            type: string
            default: ""
            description: "Path to external signer truststore"
          truststorePasswordFile:
            type: string
            default: ""
            description: "Path to file containing external signer truststore password"
      proposerConfig:
        type: object
        properties:
          enabled:
            type: boolean
            default: false
            description: "Enable proposer configuration"
          file:
            type: string
            default: ""
            description: "Path to proposer configuration file"
          refreshEnabled:
            type: boolean
            default: false
            description: "Enable refresh of proposer configuration"
          blindedBlocksEnabled:
            type: boolean
            default: false
            description: "Enable blinded block proposals"
          refreshInterval:
            type: number
            default: 0
            description: "Refresh interval for proposer configuration"
          maxValidators:
            type: number
            default: 1000000
            description: "Maximum number of validators"
          maxProposerDelay:
            type: number
            default: 0
      validatorsDir:
        type: string
        default: "$HOME/ethereum/validator/keys"
        description: "Directory containing validator keys"
      secretsDir:
        type: string
        default: "$HOME/ethereum/validator/secrets"
        description: "Directory containing validator secrets"
      distributed:
        type: boolean
        default: false
        description: "Enable distributed validator mode"
