import { ClientConfig, EthereumConfig } from "../types";

/**
 * Generate Lighthouse validator client configuration
 * @param config The Ethereum configuration
 * @returns Lighthouse validator configuration as a string
 */
function generateConfig(config: EthereumConfig): string {
  const { commonConfig, consensusConfig } = config;

  // This is a dummy implementation - in a real scenario,
  // we would generate a proper TOML/YAML configuration
  return `
# Lighthouse Validator Configuration File
# Generated by Smithy

datadir: "${commonConfig.dataDir}/lighthouse-validator"
network: "${commonConfig.network}"

# Beacon node settings
beacon-nodes: ["http://localhost:${consensusConfig.httpPort}"]

# Metrics settings
metrics: ${commonConfig.features.monitoring}
metrics-address: 0.0.0.0
metrics-port: 5064

# Validator settings
graffiti: "Smithy"
suggested-fee-recipient: "0x0000000000000000000000000000000000000000"

# Distributed validator technology (DVT) settings
enable-doppelganger-protection: true

# MEV Boost settings
private-tx-proposals: false
`;
}

export const client: ClientConfig = {
  name: "Lighthouse Validator",
  type: "validator",
  generateConfig,
};
